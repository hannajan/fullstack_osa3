{"version":3,"sources":["components/FilterForm.js","components/PersonForm.js","components/Persons.js","services/persons.js","App.js","index.js"],"names":["FilterForm","filter","handleChange","value","onChange","PersonForm","handleSubmit","name","handleNameChange","number","handleNumberChange","onSubmit","type","Button","person","handleClick","onClick","Person","Persons","persons","newFilter","toLowerCase","includes","map","key","baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Notification","message","className","Error","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setNewFilter","notification","setNotification","errorMessage","setErrorMessage","useEffect","personService","initialPersons","event","target","preventDefault","isOnList","forEach","nameIsOnList","window","confirm","find","p","returned","setTimeout","catch","error","returnedPerson","concat","copy","splice","indexOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c15be867.chunk.js","sourcesContent":["import React from 'react';\n\nconst FilterForm = ({filter, handleChange}) => {\n    return (\n      <form>\n            <div>\n                filter shown with<input value={filter} onChange={handleChange}/>\n            </div>\n        </form>\n    )\n  }\n\nexport default FilterForm","import React from 'react'; \n\nconst PersonForm = ({handleSubmit, name, handleNameChange, number, handleNumberChange}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n          <div>name: <input value={name} onChange={handleNameChange}/></div>\n          <div>number: <input value={number} onChange={handleNumberChange}/></div>\n          <div><button type=\"submit\">add</button></div>\n        </form>\n    )\n}\n\nexport default PersonForm","import React from 'react';\n\nconst Persons = ({persons, newFilter, handleClick}) => {\n    var filtered = persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n  \n    return filtered.map(person => <Person key={person.name} person={person} handleClick={handleClick}/>)\n  } \n  \n  \n  const Button = ({person, handleClick}) => {\n    return <button onClick={() => handleClick(person)}>delete</button>\n}\n\nconst Person = ({person, handleClick}) => {\n    return <div>{person.name} {person.number} <Button handleClick={handleClick} person={person}/></div>\n}\n\nexport default Persons","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst replaceNumber = (id, newObject) => {\n    return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nexport default {getAll, create, remove, replaceNumber}","import React, { useState, useEffect } from 'react';\nimport FilterForm from './components/FilterForm';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ notification, setNotification] = useState(null)\n  const [ errorMessage, setErrorMessage] = useState(null)\n  \n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n  \n  const nameIsOnList = () => {\n    var isOnList = false\n      persons.forEach(person => {if(person.name === newName) isOnList = true})\n    return isOnList\n  }\n\n  const addPerson = (event) => {\n      event.preventDefault()\n\n      if(!nameIsOnList()) {\n        const personObject = {\n          name: newName,\n          number: newNumber,\n        }\n\n        personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setNotification(\n            `Added ${newName}`\n          )\n          setTimeout(() => {\n            setNotification(null)\n          }, 3000)\n        })\n\n\n      } else { \n        if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n          const newObject = persons.find(p => p.name === newName)\n          newObject.number = newNumber\n          \n          personService\n          .replaceNumber(newObject.id, newObject)\n          .then(returned => {\n            setNewName('')\n            setNewNumber('')\n            setNotification(\n              `Updated phonenumber for ${newName}`\n            )\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n          }).catch(error => {\n            setErrorMessage(`Information of ${newName} was already deleted from server`)\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n          })\n        \n        }\n      }\n  }\n\n  const handleNameChange = (event) => {\n      setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n      setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n      setNewFilter(event.target.value)\n  }\n\n  const handlePersonDelete = person => {\n    if(window.confirm(`Delete ${person.name}?`)) {\n      var copy = [...persons]\n      copy.splice(persons.indexOf(person), 1)\n      setPersons(copy)\n      personService.remove(person.id)\n      .then( response => {\n        setNotification(\n          `${person.name} was deleted from phonebook`\n        )\n\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n      })\n    }\n}\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} />\n      <Error message={errorMessage} />\n      <FilterForm filter={newFilter} handleChange={handleFilterChange} />\n      <h3>Add a new</h3>\n      <PersonForm handleSubmit={addPerson} name={newName} handleNameChange={handleNameChange} number={newNumber} handleNumberChange={handleNumberChange}/>\n      <h3>Numbers</h3>\n      <Persons persons={persons} newFilter={newFilter} handleClick={handlePersonDelete}/>\n    </div>\n  )\n}\n\nconst Notification = ({ message}) => {\n  if(message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"confirm\">\n      {message}\n    </div>\n  )\n}\n\nconst Error = ({ message}) => {\n  if(message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}